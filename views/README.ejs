<!DOCTYPE html><html><head>
      <title>README</title>
      <meta charset="utf-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      
      <link rel="stylesheet" href="file:////Users/neelanjanmukherji/.vscode/extensions/shd101wyy.markdown-preview-enhanced-0.6.3/node_modules/@shd101wyy/mume/dependencies/katex/katex.min.css">
      
      
      
      
      
      
      
      
      
      <style>
      /**
 * prism.js Github theme based on GitHub's theme.
 * @author Sam Clarke
 */
code[class*="language-"],
pre[class*="language-"] {
  color: #333;
  background: none;
  font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace;
  text-align: left;
  white-space: pre;
  word-spacing: normal;
  word-break: normal;
  word-wrap: normal;
  line-height: 1.4;

  -moz-tab-size: 8;
  -o-tab-size: 8;
  tab-size: 8;

  -webkit-hyphens: none;
  -moz-hyphens: none;
  -ms-hyphens: none;
  hyphens: none;
}

/* Code blocks */
pre[class*="language-"] {
  padding: .8em;
  overflow: auto;
  /* border: 1px solid #ddd; */
  border-radius: 3px;
  /* background: #fff; */
  background: #f5f5f5;
}

/* Inline code */
:not(pre) > code[class*="language-"] {
  padding: .1em;
  border-radius: .3em;
  white-space: normal;
  background: #f5f5f5;
}

.token.comment,
.token.blockquote {
  color: #969896;
}

.token.cdata {
  color: #183691;
}

.token.doctype,
.token.punctuation,
.token.variable,
.token.macro.property {
  color: #333;
}

.token.operator,
.token.important,
.token.keyword,
.token.rule,
.token.builtin {
  color: #a71d5d;
}

.token.string,
.token.url,
.token.regex,
.token.attr-value {
  color: #183691;
}

.token.property,
.token.number,
.token.boolean,
.token.entity,
.token.atrule,
.token.constant,
.token.symbol,
.token.command,
.token.code {
  color: #0086b3;
}

.token.tag,
.token.selector,
.token.prolog {
  color: #63a35c;
}

.token.function,
.token.namespace,
.token.pseudo-element,
.token.class,
.token.class-name,
.token.pseudo-class,
.token.id,
.token.url-reference .token.variable,
.token.attr-name {
  color: #795da3;
}

.token.entity {
  cursor: help;
}

.token.title,
.token.title .token.punctuation {
  font-weight: bold;
  color: #1d3e81;
}

.token.list {
  color: #ed6a43;
}

.token.inserted {
  background-color: #eaffea;
  color: #55a532;
}

.token.deleted {
  background-color: #ffecec;
  color: #bd2c00;
}

.token.bold {
  font-weight: bold;
}

.token.italic {
  font-style: italic;
}


/* JSON */
.language-json .token.property {
  color: #183691;
}

.language-markup .token.tag .token.punctuation {
  color: #333;
}

/* CSS */
code.language-css,
.language-css .token.function {
  color: #0086b3;
}

/* YAML */
.language-yaml .token.atrule {
  color: #63a35c;
}

code.language-yaml {
  color: #183691;
}

/* Ruby */
.language-ruby .token.function {
  color: #333;
}

/* Markdown */
.language-markdown .token.url {
  color: #795da3;
}

/* Makefile */
.language-makefile .token.symbol {
  color: #795da3;
}

.language-makefile .token.variable {
  color: #183691;
}

.language-makefile .token.builtin {
  color: #0086b3;
}

/* Bash */
.language-bash .token.keyword {
  color: #0086b3;
}

/* highlight */
pre[data-line] {
  position: relative;
  padding: 1em 0 1em 3em;
}
pre[data-line] .line-highlight-wrapper {
  position: absolute;
  top: 0;
  left: 0;
  background-color: transparent;
  display: block;
  width: 100%;
}

pre[data-line] .line-highlight {
  position: absolute;
  left: 0;
  right: 0;
  padding: inherit 0;
  margin-top: 1em;
  background: hsla(24, 20%, 50%,.08);
  background: linear-gradient(to right, hsla(24, 20%, 50%,.1) 70%, hsla(24, 20%, 50%,0));
  pointer-events: none;
  line-height: inherit;
  white-space: pre;
}

pre[data-line] .line-highlight:before, 
pre[data-line] .line-highlight[data-end]:after {
  content: attr(data-start);
  position: absolute;
  top: .4em;
  left: .6em;
  min-width: 1em;
  padding: 0 .5em;
  background-color: hsla(24, 20%, 50%,.4);
  color: hsl(24, 20%, 95%);
  font: bold 65%/1.5 sans-serif;
  text-align: center;
  vertical-align: .3em;
  border-radius: 999px;
  text-shadow: none;
  box-shadow: 0 1px white;
}

pre[data-line] .line-highlight[data-end]:after {
  content: attr(data-end);
  top: auto;
  bottom: .4em;
}html body{font-family:"Helvetica Neue",Helvetica,"Segoe UI",Arial,freesans,sans-serif;font-size:16px;line-height:1.6;color:#333;background-color:#fff;overflow:initial;box-sizing:border-box;word-wrap:break-word}html body>:first-child{margin-top:0}html body h1,html body h2,html body h3,html body h4,html body h5,html body h6{line-height:1.2;margin-top:1em;margin-bottom:16px;color:#000}html body h1{font-size:2.25em;font-weight:300;padding-bottom:.3em}html body h2{font-size:1.75em;font-weight:400;padding-bottom:.3em}html body h3{font-size:1.5em;font-weight:500}html body h4{font-size:1.25em;font-weight:600}html body h5{font-size:1.1em;font-weight:600}html body h6{font-size:1em;font-weight:600}html body h1,html body h2,html body h3,html body h4,html body h5{font-weight:600}html body h5{font-size:1em}html body h6{color:#5c5c5c}html body strong{color:#000}html body del{color:#5c5c5c}html body a:not([href]){color:inherit;text-decoration:none}html body a{color:#08c;text-decoration:none}html body a:hover{color:#00a3f5;text-decoration:none}html body img{max-width:100%}html body>p{margin-top:0;margin-bottom:16px;word-wrap:break-word}html body>ul,html body>ol{margin-bottom:16px}html body ul,html body ol{padding-left:2em}html body ul.no-list,html body ol.no-list{padding:0;list-style-type:none}html body ul ul,html body ul ol,html body ol ol,html body ol ul{margin-top:0;margin-bottom:0}html body li{margin-bottom:0}html body li.task-list-item{list-style:none}html body li>p{margin-top:0;margin-bottom:0}html body .task-list-item-checkbox{margin:0 .2em .25em -1.8em;vertical-align:middle}html body .task-list-item-checkbox:hover{cursor:pointer}html body blockquote{margin:16px 0;font-size:inherit;padding:0 15px;color:#5c5c5c;background-color:#f0f0f0;border-left:4px solid #d6d6d6}html body blockquote>:first-child{margin-top:0}html body blockquote>:last-child{margin-bottom:0}html body hr{height:4px;margin:32px 0;background-color:#d6d6d6;border:0 none}html body table{margin:10px 0 15px 0;border-collapse:collapse;border-spacing:0;display:block;width:100%;overflow:auto;word-break:normal;word-break:keep-all}html body table th{font-weight:bold;color:#000}html body table td,html body table th{border:1px solid #d6d6d6;padding:6px 13px}html body dl{padding:0}html body dl dt{padding:0;margin-top:16px;font-size:1em;font-style:italic;font-weight:bold}html body dl dd{padding:0 16px;margin-bottom:16px}html body code{font-family:Menlo,Monaco,Consolas,'Courier New',monospace;font-size:.85em !important;color:#000;background-color:#f0f0f0;border-radius:3px;padding:.2em 0}html body code::before,html body code::after{letter-spacing:-0.2em;content:"\00a0"}html body pre>code{padding:0;margin:0;font-size:.85em !important;word-break:normal;white-space:pre;background:transparent;border:0}html body .highlight{margin-bottom:16px}html body .highlight pre,html body pre{padding:1em;overflow:auto;font-size:.85em !important;line-height:1.45;border:#d6d6d6;border-radius:3px}html body .highlight pre{margin-bottom:0;word-break:normal}html body pre code,html body pre tt{display:inline;max-width:initial;padding:0;margin:0;overflow:initial;line-height:inherit;word-wrap:normal;background-color:transparent;border:0}html body pre code:before,html body pre tt:before,html body pre code:after,html body pre tt:after{content:normal}html body p,html body blockquote,html body ul,html body ol,html body dl,html body pre{margin-top:0;margin-bottom:16px}html body kbd{color:#000;border:1px solid #d6d6d6;border-bottom:2px solid #c7c7c7;padding:2px 4px;background-color:#f0f0f0;border-radius:3px}@media print{html body{background-color:#fff}html body h1,html body h2,html body h3,html body h4,html body h5,html body h6{color:#000;page-break-after:avoid}html body blockquote{color:#5c5c5c}html body pre{page-break-inside:avoid}html body table{display:table}html body img{display:block;max-width:100%;max-height:100%}html body pre,html body code{word-wrap:break-word;white-space:pre}}.markdown-preview{width:100%;height:100%;box-sizing:border-box}.markdown-preview .pagebreak,.markdown-preview .newpage{page-break-before:always}.markdown-preview pre.line-numbers{position:relative;padding-left:3.8em;counter-reset:linenumber}.markdown-preview pre.line-numbers>code{position:relative}.markdown-preview pre.line-numbers .line-numbers-rows{position:absolute;pointer-events:none;top:1em;font-size:100%;left:0;width:3em;letter-spacing:-1px;border-right:1px solid #999;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.markdown-preview pre.line-numbers .line-numbers-rows>span{pointer-events:none;display:block;counter-increment:linenumber}.markdown-preview pre.line-numbers .line-numbers-rows>span:before{content:counter(linenumber);color:#999;display:block;padding-right:.8em;text-align:right}.markdown-preview .mathjax-exps .MathJax_Display{text-align:center !important}.markdown-preview:not([for="preview"]) .code-chunk .btn-group{display:none}.markdown-preview:not([for="preview"]) .code-chunk .status{display:none}.markdown-preview:not([for="preview"]) .code-chunk .output-div{margin-bottom:16px}.scrollbar-style::-webkit-scrollbar{width:8px}.scrollbar-style::-webkit-scrollbar-track{border-radius:10px;background-color:transparent}.scrollbar-style::-webkit-scrollbar-thumb{border-radius:5px;background-color:rgba(150,150,150,0.66);border:4px solid rgba(150,150,150,0.66);background-clip:content-box}html body[for="html-export"]:not([data-presentation-mode]){position:relative;width:100%;height:100%;top:0;left:0;margin:0;padding:0;overflow:auto}html body[for="html-export"]:not([data-presentation-mode]) .markdown-preview{position:relative;top:0}@media screen and (min-width:914px){html body[for="html-export"]:not([data-presentation-mode]) .markdown-preview{padding:2em calc(50% - 457px + 2em)}}@media screen and (max-width:914px){html body[for="html-export"]:not([data-presentation-mode]) .markdown-preview{padding:2em}}@media screen and (max-width:450px){html body[for="html-export"]:not([data-presentation-mode]) .markdown-preview{font-size:14px !important;padding:1em}}@media print{html body[for="html-export"]:not([data-presentation-mode]) #sidebar-toc-btn{display:none}}html body[for="html-export"]:not([data-presentation-mode]) #sidebar-toc-btn{position:fixed;bottom:8px;left:8px;font-size:28px;cursor:pointer;color:inherit;z-index:99;width:32px;text-align:center;opacity:.4}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] #sidebar-toc-btn{opacity:1}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc{position:fixed;top:0;left:0;width:300px;height:100%;padding:32px 0 48px 0;font-size:14px;box-shadow:0 0 4px rgba(150,150,150,0.33);box-sizing:border-box;overflow:auto;background-color:inherit}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc::-webkit-scrollbar{width:8px}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc::-webkit-scrollbar-track{border-radius:10px;background-color:transparent}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc::-webkit-scrollbar-thumb{border-radius:5px;background-color:rgba(150,150,150,0.66);border:4px solid rgba(150,150,150,0.66);background-clip:content-box}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc a{text-decoration:none}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc ul{padding:0 1.6em;margin-top:.8em}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc li{margin-bottom:.8em}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .md-sidebar-toc ul{list-style-type:none}html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .markdown-preview{left:300px;width:calc(100% -  300px);padding:2em calc(50% - 457px -  150px);margin:0;box-sizing:border-box}@media screen and (max-width:1274px){html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .markdown-preview{padding:2em}}@media screen and (max-width:450px){html body[for="html-export"]:not([data-presentation-mode])[html-show-sidebar-toc] .markdown-preview{width:100%}}html body[for="html-export"]:not([data-presentation-mode]):not([html-show-sidebar-toc]) .markdown-preview{left:50%;transform:translateX(-50%)}html body[for="html-export"]:not([data-presentation-mode]):not([html-show-sidebar-toc]) .md-sidebar-toc{display:none}
/* Please visit the URL below for more information: */
/*   https://shd101wyy.github.io/markdown-preview-enhanced/#/customize-css */

      </style>
    </head>
    <body for="html-export">
      <div class="mume markdown-preview  ">
      <h1 class="mume-header" id="domain-web-developmenttech-a-thon-30">Domain : Web Development(Tech-A-Thon 3.0)</h1>

<h2 class="mume-header" id="problem-statement-1-online-compiler">Problem Statement 1 (Online Compiler)</h2>

<p>Create a online compiler in which user should input the code from an code editor of any programming language and the code should be compiled on the server compiler accordingly and return back the compiled output to the client.</p>
<h3 class="mume-header" id="frontend">Frontend:</h3>

<ul>
<li>You need to create a code editor where user can write the code by choosing any programming language (minimum 3 programming language it should support ex. Java, Python, C++, etc.).</li>
<li>A terminal to view the code output</li>
</ul>
<h3 class="mume-header" id="backend">Backend:</h3>

<ul>
<li>Create any programming language compiler (minimum 3 programming language ex. Java, Python, C++, etc.)</li>
<li>Dockerise compiler server and host on any cloud services (ex. AWS, Heroku, Azure, etc.)</li>
</ul>
<blockquote>
<p>NOTE: Don&#x2019;t use any third party APIs nor any open source project for compiler.</p>
</blockquote>
<h1 class="mume-header" id="about-this-repository">About this Repository</h1>

<p>We are Semicolonn Stardust; and this is our Solution for Problem Statement 1 <em>Online Compiler</em> of the Domain : Web Development.</p>
<p>Our Site is Live <a href="http://semicolonstardust.live">here</a></p>
<p>To view an in-depth about our project here are two videos from our official <a href="https://www.youtube.com/channel/UCUMvUsXuSZrwPG37jQ4QdOw">YouTube Channel</a>.</p>
<p><a href="https://youtu.be/Ag9oSWI3Sws">Presentation Video</a><br>
<a href="https://www.youtube.com/watch?v=6iB44PNlgrg">Project Demo Video</a></p>
<h2 class="mume-header" id="our-tech-stack">Our Tech Stack :</h2>

<ul>
<li><a href="nodejs.dev">Node.js</a></li>
<li><a href="https://expressjs.com/">Express.js</a></li>
<li><a href="https://handlebarsjs.com/">Handlebars</a></li>
<li><a href="https://html5.org/">HTML</a></li>
<li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS">CSS</a></li>
<li><a href="https://www.javascript.com/">Vanilla JavaScript</a></li>
<li><a href="https://www.docker.com/">Docker</a> (For Containerization)</li>
<li><a href="https://git-scm.com/">Git</a> (As Version Control System)</li>
<li><a href="https://github.com/">GitHub</a></li>
<li><a href="https://www.digitalocean.com/">Digital Ocean</a></li>
<li><a href="https://httpd.apache.org/">Apache 2</a></li>
<li><a href="https://www.nginx.com/">Nginx</a>(in Docker)</li>
<li><a href="https://www.namecheap.com/">Namecheap</a></li>
<li><a href="https://letsencrypt.org/">Let&apos;s Encrypt</a> (For an SSL Certificate)</li>
</ul>
<h1 class="mume-header" id="for-contributing-this-project">For Contributing this Project</h1>

<ul>
<li>
<p>If you wish to contribute to this repository then you can Fork the Repository.</p>
</li>
<li>
<p>Then add or change the things you want in the Repo.</p>
</li>
<li>
<p>Then send a Pull Request.</p>
</li>
<li>
<p>Once we get it we&apos;ll review it and Approve or Deny the PR accordingly.</p>
</li>
<li>
<p>We may setup a CI/CD Pipeline in future for the project so your PR will get merged instantly if it meets the following conditions :</p>
<ul>
<li>If an Upstream is setup</li>
<li>If GitHub says &quot;Able to Merge&quot;</li>
</ul>
</li>
</ul>
<h1 class="mume-header" id="basic-practices-of-git-for-running-the-project-on-localhost">Basic Practices of Git for running the project on localhost</h1>

<p>So there are two ways you can proceed and run the project on localhost.</p>
<p>Following is Method 1 which will allow you to setup the project on localhost:5000</p>
<p>First Fork the Repository and then :</p>
<pre data-role="codeBlock" data-info="bash" class="language-bash">$ ~ <span class="token function">git</span> clone https://github.com/<span class="token punctuation">{</span>your-username<span class="token punctuation">}</span>/Online-Compiler.git
</pre><pre data-role="codeBlock" data-info="bash" class="language-bash">$ ~ <span class="token builtin class-name">cd</span> Online-Compiler
</pre><pre data-role="codeBlock" data-info="bash" class="language-bash">$ ~ <span class="token function">git</span> commit -a -m <span class="token string">&quot;Inital Commit for Upstream Push&quot;</span>
</pre><pre data-role="codeBlock" data-info="bash" class="language-bash">$ ~ <span class="token function">git</span> push -u origin main
</pre><p>In this method you don&apos;t have to worry about <code>git remote add origin</code>.</p>
<p>Following is Method 2 where you will need to manually add the remote repository and remote upstream repository.</p>
<p>After Forking the Repository :</p>
<ul>
<li>Enter your desired directory from a terminal and then :</li>
</ul>
<pre data-role="codeBlock" data-info="bash" class="language-bash">$ ~ <span class="token function">git</span> init
</pre><pre data-role="codeBlock" data-info="bash" class="language-bash">$ ~ <span class="token function">git</span> remote <span class="token function">add</span> origin https://github.com/<span class="token punctuation">{</span>your-username<span class="token punctuation">}</span>/Online-Compiler.git
</pre><pre data-role="codeBlock" data-info="bash" class="language-bash">$ ~ <span class="token function">git</span> commit -a -m <span class="token string">&quot;Inital Commit for Upstream Push&quot;</span>
</pre><pre data-role="codeBlock" data-info="bash" class="language-bash">$ ~ <span class="token function">git</span> push
</pre><pre data-role="codeBlock" data-info="bash" class="language-bash">$ ~ <span class="token function">git</span> remote <span class="token function">add</span> upstream origin https://github.com/semicolon-stardust/Online-Compiler.git
</pre><pre data-role="codeBlock" data-info="bash" class="language-bash">$ ~ <span class="token function">git</span> remote -v
</pre><p>The last line with <code>git remote -v</code> will help you in understanding that whether the upstream setup was successful or not.</p>
<hr>
<h1 class="mume-header" id="how-to-build-a-docker-image-locally">How to build a Docker Image locally</h1>

<ul>
<li>Make sure docker is installed in your device.</li>
</ul>
<p>If you are in a Linux system you can check it by :</p>
<pre data-role="codeBlock" data-info="bash" class="language-bash">$ ~ <span class="token function">which</span> docker
</pre><ul>
<li>First you need to build the Docker.</li>
</ul>
<pre data-role="codeBlock" data-info="bash" class="language-bash">$ ~ docker build -t semicolonstardust/floc.c <span class="token builtin class-name">.</span>
</pre><ul>
<li>Renaming your Local Container(Quality of life Step)</li>
</ul>
<pre data-role="codeBlock" data-info="bash" class="language-bash">$ ~ docker <span class="token function">rename</span> <span class="token punctuation">{</span>dynamic_old_container_name<span class="token punctuation">}</span> semicolon/floc.c
</pre><ul>
<li>To run the Image that you build.</li>
</ul>
<pre data-role="codeBlock" data-info="bash" class="language-bash">$ ~ docker run -d -p <span class="token number">8080</span>:5000 semicolon/floc.c
</pre><blockquote>
<p>NOTE : 8080:5000 -&gt; Here 8080 is the forwarded port and 5000 is the port where the app is actually running</p>
</blockquote>
<hr>
<p>This Project is fully Dockerized and you can visit our <a href="https://hub.docker.com/u/semicolonstardust">Organization Profile</a> and the <a href="https://hub.docker.com/r/semicolonstardust/floc.c">Repository</a> on Docker Hub.</p>
<h1 class="mume-header" id="things-git-will-ignore">Things git will ignore</h1>

<pre data-role="codeBlock" data-info="git" class="language-git"><span class="token comment"># Logs</span>
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

<span class="token comment"># Diagnostic reports (https://nodejs.org/api/report.html)</span>
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

<span class="token comment"># Runtime data</span>
pids
*.pid
*.seed
*.pid.lock

<span class="token comment"># Directory for instrumented libs generated by jscoverage/JSCover</span>
lib-cov

<span class="token comment"># Coverage directory used by tools like istanbul</span>
coverage
*.lcov

<span class="token comment"># nyc test coverage</span>
.nyc_output

<span class="token comment"># Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)</span>
.grunt

<span class="token comment"># Bower dependency directory (https://bower.io/)</span>
bower_components

<span class="token comment"># node-waf configuration</span>
.lock-wscript

<span class="token comment"># Compiled binary addons (https://nodejs.org/api/addons.html)</span>
build/Release

<span class="token comment"># Dependency directories</span>
node_modules/
jspm_packages/

<span class="token comment"># Snowpack dependency directory (https://snowpack.dev/)</span>
web_modules/

<span class="token comment"># TypeScript cache</span>
*.tsbuildinfo

<span class="token comment"># Optional npm cache directory</span>
.npm

<span class="token comment"># Optional eslint cache</span>
.eslintcache

<span class="token comment"># Optional stylelint cache</span>
.stylelintcache

<span class="token comment"># Microbundle cache</span>
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

<span class="token comment"># Optional REPL history</span>
.node_repl_history

<span class="token comment"># Output of &apos;npm pack&apos;</span>
*.tgz

<span class="token comment"># Yarn Integrity file</span>
.yarn-integrity

<span class="token comment"># dotenv environment variable files</span>
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

<span class="token comment"># parcel-bundler cache (https://parceljs.org/)</span>
.cache
.parcel-cache

<span class="token comment"># Next.js build output</span>
.next
out

<span class="token comment"># Nuxt.js build / generate output</span>
.nuxt
dist

<span class="token comment"># Gatsby files</span>
.cache/
<span class="token comment"># Comment in the public line in if your project uses Gatsby and not Next.js</span>
<span class="token comment"># https://nextjs.org/blog/next-9-1#public-directory-support</span>
<span class="token comment"># public</span>

<span class="token comment"># vuepress build output</span>
.vuepress/dist

<span class="token comment"># vuepress v2.x temp and cache directory</span>
.temp
.cache

<span class="token comment"># Docusaurus cache and generated files</span>
.docusaurus

<span class="token comment"># Serverless directories</span>
.serverless/

<span class="token comment"># FuseBox cache</span>
.fusebox/

<span class="token comment"># DynamoDB Local files</span>
.dynamodb/

<span class="token comment"># TernJS port file</span>
.tern-port

<span class="token comment"># Stores VSCode versions used for testing VSCode extensions</span>
.vscode-test

<span class="token comment"># yarn v2</span>
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*


public/ace-editor
public/src-min

.DS_Store
</pre><h1 class="mume-header" id="things-docker-will-ignore">Things docker will ignore</h1>

<pre data-role="codeBlock" data-info="docker" class="language-docker">**/.classpath
**/.dockerignore
**/.env
**/.git
**/.gitignore
**/.project
**/.settings
**/.toolstarget
**/.vs
**/.vscode
**/*.*proj.user
**/*.dbmdl
**/*.jfm
**/azds.yaml
**/charts
**/docker-compose*
**/Dockerfile*
**/node_modules
**/npm-debug.log
**/obj
**/secrets.dev.yaml
**/values.dev.yaml
README.md
</pre>
      </div>
      
      
    
    
    
    
    
    
    
    
  
    </body></html>